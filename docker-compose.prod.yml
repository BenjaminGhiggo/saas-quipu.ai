version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: quipu_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: quipu_db
    ports:
      - "27018:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - quipu_network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: quipu_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - quipu_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Backend API
  quipu-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: quipu_backend
    restart: unless-stopped
    ports:
      - "7000:7000"
    environment:
      - NODE_ENV=production
      - PORT=7000
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/quipu_db?authSource=admin
      - REDIS_URL=redis://redis:6379
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - quipu_network
    volumes:
      - backend_uploads:/app/uploads
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Web App
  quipu-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: quipu_frontend
    restart: unless-stopped
    ports:
      - "5000:5000"
    depends_on:
      quipu-backend:
        condition: service_healthy
    networks:
      - quipu_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  backend_uploads:
    driver: local

networks:
  quipu_network:
    driver: bridge